name: CI Workflow on MinGW64

on:
  push:
    branches:
      - '*'

jobs:
  mingw-ci:
    runs-on: windows-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Cache build env
        id: cache-env
        uses: actions/cache@v4
        with:
          path: |
            $env:USERPROFILE\\env-build
            $env:USERPROFILE\\choco
            $env:USERPROFILE\\.conan2

          key: ${{ runner.os }}
          restore-keys: ${{ runner.os }}
          enableCrossOsArchive: true

      # Set up venv
      - name: Set up venv
        run: |
          choco config set --name="'cacheLocation'" --value="$env:USERPROFILE\choco"
          python3.exe -m venv $env:USERPROFILE\env-build
          . $env:USERPROFILE\env-build\Scripts\Activate.ps1
          pip install ninja meson conan cppcheck
 
     # Check code format
      - name: Check format
        run: |
          clang-format -style=Webkit -i $(git ls-files 'src/*.cpp' 'src/*.h')
          git diff --exit-code || (echo "Code is not formatted properly.")

      # Build the project
      - name: Build
        run: |
          . $env:USERPROFILE\env-build\Scripts\Activate.ps1
          conan profile detect
          conan install . --output-folder=build --build=missing
          meson setup --native-file build/conan_meson_native.ini build 
          meson compile -C build

      # Lint the code
      - name: Lint
        run: |
          . $env:USERPROFILE\env-build\Scripts\Activate.ps1
          cppcheck --project=build/compile_commands.json --enable=all --suppress=missingIncludeSystem --inconclusive --quiet --error-exitcode=1
          clang-tidy --config-file=.clang-tidy --warnings-as-errors=* -p .\build src/*.c 

      # Package the build output
      - name: Package build artifacts
        run: |
          makensis config.nsi
          mkdir package
          cp blappy-fird-installer-1.0.0.exe package/
        shell: bash

      # Upload package as an artifact
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Installer-Package
          path: package/

          
